<xml>

<!-- You can override the in a "vars" section on your own .hxcpp_config -->
<!-- eg:

<xml>

  <section id="vars">
     <set name="IPHONE_VER" value="2.2.1"/>
     <set name="macos_leopard" value="1"/>
     <set name="USE_PRECOMPILED_HEADERS" value="1"/>
  </section>

  <section id="exes">
     <linker id="dll" if="windows">
        <flag value = "-libpath:e:\VS8\DirectXSDK\Lib\x86"/>
     </linker>
  </section>

</xml>

You can also set the environment variable "HXCPP_COMPILE_THREADS" to the number of threads
you wish to use when compiling.  Setting it to 1 per CPU can speed things up,
and setting it to 1 can help with debug if there is a problem compiling.

-->


<set name="DBG" value="-debug" if="debug"/>
<set name="M64" value="64" if="HXCPP_M64"/>
<set name="IPHONE_VER" value="4.0"/>
<set name="STD_MODULE_LINK" value="dll"/>
<set name="STD_MODULE_LINK" value="static" if="iphoneos"/>
<set name="STD_MODULE_LINK" value="static" if="iphonesim"/>

<set name="USE_PRECOMPILED_HEADERS" value="1" if="windows"/>


<set name="LIBEXTRA" value=".iphoneos" if="iphoneos"/>
<set name="LIBEXTRA" value=".iphonesim" if="iphonesim"/>


<set name="GC_DIR" value="thirdparty/gc-7.1"/>
<set name="AO_VERSION" value="1.2"/>

<set name="static" value="1" if="iphoneos"/>
<set name="static" value="1" if="iphonesim"/>

<set name="haxelink" value="exe" unless="static"/>
<set name="haxelink" value="static" if="static"/>
<set name="haxelink" value="dll" if="android"/>


<include name="${HXCPP_CONFIG}" section="vars" noerror="1"/>


<!-- You can override the exes an "exe" section on your own .hxcpp_config -->
<!-- You can use replace="1" to change the compiler, or omit to add flags -->

<include name="${toolchain}-toolchain.xml"/>


<!-- Library files & targets -------------------------------------->

<files id="boehm_gc" dir="${HXCPP}">

  <compilerflag value="-DX86" if="macos"/>
  <compilerflag value="-DHAS_X86_THREAD_STATE32___EAX=1" if="macos" unless="macos_leopard"/>
  <compilerflag value="-DNO_THREAD_REDIRECT" if="macos"/>
  <compilerflag value="-DGC_THREADS"/>
  <compilerflag value="-DNO_THREAD_REDIRECT" if="linux"/>
  <compilerflag value="-DWIN32_THREADS" if="windows"/>

  <compilerflag value="-I${HXCPP}/runtime/${GC_DIR}/include"/>
  <compilerflag value="-I${HXCPP}/runtime/${GC_DIR}/include/private"/>
  <compilerflag value="-I${HXCPP}/runtime/${GC_DIR}/libatomic_ops-${AO_VERSION}/src"/>

  <compilerflag value="-DHXCPP_DEBUG" if="debug"/>
  <compilerflag value="-DWIN32_THREADS" if="windows"/>
  <compilerflag value="-DBUILDING_HXCPP_DLL"/>
  <compilerflag value="-D_CRT_SECURE_NO_DEPRECATE"/>
  <compilerflag value="-DALL_INTERIOR_POINTERS"/>
  <compilerflag value="-DGC_NOT_DLL"/>

  <file name="runtime/${GC_DIR}/win32_threads.c" if="windows"/>
  <file name="runtime/${GC_DIR}/darwin_stop_world.c" if="macos"/>
  <file name="runtime/${GC_DIR}/pthread_stop_world.c" unless="windows"/>
  <file name="runtime/${GC_DIR}/pthread_support.c" unless="windows"/>
  <file name="runtime/${GC_DIR}/allchblk.c"/>
  <file name="runtime/${GC_DIR}/alloc.c"/>
  <file name="runtime/${GC_DIR}/backgraph.c"/>
  <file name="runtime/${GC_DIR}/blacklst.c"/>
  <file name="runtime/${GC_DIR}/checksums.c"/>
  <file name="runtime/${GC_DIR}/dbg_mlc.c"/>
  <file name="runtime/${GC_DIR}/dyn_load.c"/>
  <file name="runtime/${GC_DIR}/finalize.c"/>
  <file name="runtime/${GC_DIR}/gc_dlopen.c"/>
  <file name="runtime/${GC_DIR}/gcj_mlc.c"/>
  <file name="runtime/${GC_DIR}/headers.c"/>
  <file name="runtime/${GC_DIR}/mach_dep.c"/>
  <file name="runtime/${GC_DIR}/malloc.c"/>
  <file name="runtime/${GC_DIR}/mallocx.c"/>
  <file name="runtime/${GC_DIR}/mark.c"/>
  <file name="runtime/${GC_DIR}/mark_rts.c"/>
  <file name="runtime/${GC_DIR}/misc.c"/>
  <file name="runtime/${GC_DIR}/msvc_dbg.c" if="windows"/>
  <file name="runtime/${GC_DIR}/new_hblk.c"/>
  <file name="runtime/${GC_DIR}/obj_map.c"/>
  <file name="runtime/${GC_DIR}/os_dep.c"/>
  <file name="runtime/${GC_DIR}/pcr_interface.c"/>
  <file name="runtime/${GC_DIR}/ptr_chck.c"/>
  <file name="runtime/${GC_DIR}/real_malloc.c"/>
  <file name="runtime/${GC_DIR}/reclaim.c"/>
  <file name="runtime/${GC_DIR}/specific.c"/>
  <file name="runtime/${GC_DIR}/stubborn.c"/>
  <file name="runtime/${GC_DIR}/thread_local_alloc.c"/>
  <file name="runtime/${GC_DIR}/typd_mlc.c"/>

</files>

<!-- Additional dependencies for haxe target -->
<files id="haxe">
  <depend name="${HXCPP}/include/hxcpp.h"/>
  <depend name="${HXCPP}/include/hx/Object.h"/>
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/Thread.h"/>
  <depend name="${HXCPP}/include/hx/GC.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>
  <depend name="${HXCPP}/include/hx/CFFIAPI.h"/>
  <depend name="${HXCPP}/include/hx/CFFILoader.h"/>
  <depend name="${HXCPP}/include/hx/OS.h"/>
  <depend name="${HXCPP}/include/hxMath.h"/>
  <depend name="${HXCPP}/build-tool/BuildCommon.xml"/>
  <depend name="${HXCPP}/build-tool/${toolchain}-toolchain.xml"/>
  <depend name="${HXCPP}/run.n"/>
  <depend name="Options.txt"/>

  <precompiledheader name="hxcpp" dir="${HXCPP}/include" if="USE_PRECOMPILED_HEADERS"/>
</files>


<files id="runtime" dir="${HXCPP}">
  <depend name="${HXCPP}/include/hxcpp.h"/>
  <depend name="${HXCPP}/include/hx/Object.h"/>
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hxMath.h"/>

  <compilerflag value="-DBUILDING_HXCPP_DLL"/>
  <compilerflag value="-D_CRT_SECURE_NO_DEPRECATE"/>

  <compilerflag value="-DWIN32_THREADS" if="windows"/>
  <compilerflag value="-DNO_THREAD_REDIRECT" if="macos"/>
  <compilerflag value="-DGC_THREADS" if="macos"/>
  <compilerflag value="-DNO_THREAD_REDIRECT" if="linux"/>
  <compilerflag value="-DGC_THREADS" if="linux"/>

  <compilerflag value="-I${HXCPP_CYG}/runtime/${GC_DIR}/include"/>
  <compilerflag value="-I${HXCPP_CYG}/runtime/${GC_DIR}/include/private"/>
  <compilerflag value="-I${HXCPP_CYG}/runtime/${GC_DIR}/libatomic_ops-${AO_VERSION}/src"/>

  <precompiledheader name="hxcpp" dir="${HXCPP}/include" if="USE_PRECOMPILED_HEADERS"/>

  <file name = "src/hx/Anon.cpp"/>
  <file name = "src/hx/Boot.cpp"/>
  <file name = "src/hx/CFFI.cpp"/>
  <file name = "src/hx/Date.cpp"/>
  <file name = "src/hx/GC.cpp"/>
  <file name = "src/hx/GCInternal.cpp"/>
  <file name = "src/hx/Hash.cpp"/>
  <file name = "src/hx/Interface.cpp"/>
  <file name = "src/hx/Lib.cpp"/>
  <file name = "src/hx/Object.cpp"/>
  <file name = "src/hx/StdLibs.cpp"/>
  <file name = "src/hx/Debug.cpp"/>
  <file name = "src/hx/Thread.cpp"/>
  <file name = "src/hx/RunLibs.cpp" if="static"/>

  <file name = "src/Array.cpp"/>
  <file name = "src/Class.cpp"/>
  <file name = "src/Dynamic.cpp"/>
  <file name = "src/Enum.cpp"/>
  <file name = "src/Math.cpp"/>
  <file name = "src/String.cpp"/>

</files>


<target id="default">
   <target id="haxe"/>
</target>


<target id="clean" tool="clean">
  <dir name="obj"/>
</target>


<target id="haxe" tool="linker" toolid="${haxelink}" output="${HAXE_OUTPUT}${DBG}">
  <files id="haxe"/>
  <files id="boehm_gc" if="HXCPP_BOEHM_GC"/>
  <ext value=".iphoneos.a" if="iphoneos"/>
  <ext value=".iphonesim.a" if="iphonesim"/>
  <files id="__main__" unless="static"/>
  <files id="__lib__" if="static"/>
  <files id="runtime"/>
  <lib name="-lpthread" if="linux"/>
  <lib name="-ldl" if="linux"/>
</target>

<!-- Add user config if provided, "exes" section ------------------>

<include name="${HXCPP_CONFIG}" section="exes" if ="HXCPP_CONFIG" noerror="1"/>

</xml>


