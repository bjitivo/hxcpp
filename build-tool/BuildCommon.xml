<xml>

<set name="DBG" value="-debug" if="debug"/>

<compiler id="Linuxgcc" name="g++" if="linux">
  <compilerarg value="-g" if="debug"/>
  <compilerarg value="-Wall"/>
  <compilerarg value="-Wshadow"/>
  <compilerarg value="-O2"/>
  <defineset>
    <define name="HAVE_CONFIG_H"/>
    <define name="PIC"/>
  </defineset>
  <includepath path="${dir.include}"/>
</compiler>

<set name="IPHONE_VER" value="2.2.1"/>

<compiler id="iPhoneOS" exe="/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/gcc-4.0" if="iphoneos">
  <cflag value="-c c"/>
  <cppflag value="-c c++"/>
  <cppflag value="-fvisibility-inlines-hidden"/>
  <flag value="-g" if="debug"/>
  <flag value="-O2"/>
  <flag value="-arch armv6"/>
  <flag value="-fmessage-length=0"/>
  <flag value="-pipe"/>
  <flag value="-Wno-trigraphs"/>
  <flag value="-fpascal-strings"/>
  <flag value="-fasm-blocks"/>
  <flag value="-Wreturn-type"/>
  <flag value="-Wunused-variable"/>
  <flag value="-isysroot"/>
  <flag value="/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS${IPHONE_VER}.sdk"/>
  <flag value="-fvisibility=hidden"/>
  <flag value="-gdwarf-2"/>
  <flag value="-miphoneos-version-min=${IPHONE_VER}"/>
  <flag value="-DIPHONE"/>
  <outflag value="-o "/>
  <ext value=".o"/>
  <objdir value="obj/iphoneos/" unless="debug"/>
  <objdir value="obj/iphoneos-dbg/" if="debug"/>
</compiler>

<compiler id="MSVC" exe="cl.exe" if="windows">
  <flag value="-nologo"/>
  <flag value="-Od" if="debug"/>
  <flag value="-O2" unless="debug"/>
  <flag value="-MTd" if="debug"/>
  <flag value="-MT" unless="debug"/>
  <flag value="-GR"/>
  <flag value="-Zi"/>
  <flag value="-c"/>
  <flag value="-EHsc"/>
  <flag value="-I${HXCPP}/include"/>
  <flag value="-D_CRT_SECURE_NO_DEPRECATE"/>
  <flag value="-wd4996"/>
  <outflag value="-Fo"/>
  <ext value=".obj"/>
  <objdir value="obj/Debug" if="debug"/>
  <objdir value="obj/Release" unless="debug"/>
</compiler>

<linker id="dll" exe="link.exe" if="windows">
  <flag value="-nologo"/>
  <flag value="-machine:x86"/>
  <flag value="-dll"/>
  <flag value="-debug" if="debug"/>
  <ext value=".dll"/>
  <libdir value="lib"/>
  <flag value="-libpath:lib"/>
  <outflag value="-out:"/>
</linker>

<linker id="exe" exe="link.exe" if="windows">
  <flag value="-nologo"/>
  <flag value="-machine:x86"/>
  <flag value="-debug" if="debug"/>
  <flag value="-libpath:lib"/>
  <ext value=".exe"/>
  <outflag value="-out:"/>
</linker>


<set name="STD_MODULE_LINK" value="dll"/>

<set name="GC_DIR" value="thirdparty/gc-7.1"/>
<set name="AO_VERSION" value="1.2"/>

<files id="runtime" dir="${HXCPP}">
  <depend name="${HXCPP}/include/hxMacros.h"/>
  <depend name="${HXCPP}/include/hxObject.h"/>
  <depend name="${HXCPP}/include/hxMath.h"/>
  <depend name="${HXCPP}/include/neko.h"/>

  <compilerflag value="-DBUILDING_HXCPP_DLL"/>
  <compilerflag value="-DNEKO_SOURCES"/>
  <compilerflag value="-D_CRT_SECURE_NO_DEPRECATE"/>
  <compilerflag value="-DALL_INTERIOR_POINTERS"/>
  <compilerflag value="-DGC_NOT_DLL"/>
  <compilerflag value="-DCPU" if="windows"/>
  <compilerflag value="-DMY_CPU" if="windows"/>
  <compilerflag value="-DX86" if="windows"/>
  <compilerflag value="-DWIN32_THREADS" if="windows"/>
  <compilerflag value="-DHXCPP_DEBUG" if="debug"/>

  <compilerflag value="-I${HXCPP}/runtime/${GC_DIR}/include"/>
  <compilerflag value="-I${HXCPP}/runtime/${GC_DIR}/include/private"/>
  <compilerflag value="-I${HXCPP}/runtime/${GC_DIR}/libatomic_ops-${AO_VERSION}/src"/>

  <file name = "runtime/src/hxObject.cpp"/>
  <file name = "runtime/src/hxDate.cpp"/>
  <file name = "runtime/src/hxGC.cpp"/>
  <file name = "runtime/src/hxHash.cpp"/>
  <file name = "runtime/src/hxLib.cpp"/>
  <file name = "runtime/src/hxNekoAPI.cpp"/>


  <file name="runtime/${GC_DIR}/win32_threads.c"/>
  <file name="runtime/${GC_DIR}/allchblk.c"/>
  <file name="runtime/${GC_DIR}/alloc.c"/>
  <file name="runtime/${GC_DIR}/backgraph.c"/>
  <file name="runtime/${GC_DIR}/blacklst.c"/>
  <file name="runtime/${GC_DIR}/checksums.c"/>
  <file name="runtime/${GC_DIR}/dbg_mlc.c"/>
  <file name="runtime/${GC_DIR}/dyn_load.c"/>
  <file name="runtime/${GC_DIR}/finalize.c"/>
  <file name="runtime/${GC_DIR}/gc_dlopen.c"/>
  <file name="runtime/${GC_DIR}/gcj_mlc.c"/>
  <file name="runtime/${GC_DIR}/gcname.c"/>
  <file name="runtime/${GC_DIR}/headers.c"/>
  <file name="runtime/${GC_DIR}/mach_dep.c"/>
  <file name="runtime/${GC_DIR}/malloc.c"/>
  <file name="runtime/${GC_DIR}/mallocx.c"/>
  <file name="runtime/${GC_DIR}/mark.c"/>
  <file name="runtime/${GC_DIR}/mark_rts.c"/>
  <file name="runtime/${GC_DIR}/misc.c"/>
  <file name="runtime/${GC_DIR}/msvc_dbg.c"/>
  <file name="runtime/${GC_DIR}/new_hblk.c"/>
  <file name="runtime/${GC_DIR}/obj_map.c"/>
  <file name="runtime/${GC_DIR}/os_dep.c"/>
  <file name="runtime/${GC_DIR}/pcr_interface.c"/>
  <file name="runtime/${GC_DIR}/ptr_chck.c"/>
  <file name="runtime/${GC_DIR}/real_malloc.c"/>
  <file name="runtime/${GC_DIR}/reclaim.c"/>
  <file name="runtime/${GC_DIR}/specific.c"/>
  <file name="runtime/${GC_DIR}/stubborn.c"/>
  <file name="runtime/${GC_DIR}/thread_local_alloc.c"/>
  <file name="runtime/${GC_DIR}/typd_mlc.c"/>
</files>

<target id="runtime" output="hxcpp${DBG}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="runtime"/>
  <lib name="user32.lib"/>
</target>


<files id="std" dir="${HXCPP}">
  <depend name="${HXCPP}/include/hxMacros.h"/>
  <depend name="${HXCPP}/include/hxObject.h"/>
  <depend name="${HXCPP}/include/neko.h"/>

  <file name="runtime/libs/std/Sys.cpp"/>
  <file name="runtime/libs/std/Thread.cpp"/>
  <file name="runtime/libs/std/Xml.cpp"/>
  <file name="runtime/libs/std/Process.cpp"/>
  <file name="runtime/libs/std/Random.cpp"/>
  <file name="runtime/libs/std/Socket.cpp"/>
  <file name="runtime/libs/std/String.cpp"/>
  <file name="runtime/libs/std/File.cpp"/>
  <file name="runtime/libs/std/Init.cpp"/>
  <file name="runtime/libs/std/Misc.cpp"/>

</files>



<target id="std" output="std${DBG}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="std"/>
  <flag value="-dll"/>
  <lib name="hxcpp${DBG}.lib"/>
  <lib name="wsock32.lib"/>
</target>

<set name="PCRE_DIR" value="runtime/thirdparty/pcre-7.8"/>

<files id="regexp" dir="${HXCPP}">
  <depend name="${HXCPP}/include/hxMacros.h"/>
  <depend name="${HXCPP}/include/hxObject.h"/>
  <depend name="${HXCPP}/include/neko.h"/>

  <compilerflag value="-DPCRE_STATIC"/>
  <compilerflag value="-I${HXCPP}/${PCRE_DIR}"/>

  <file name="runtime/libs/regexp/RegExp.cpp"/>

  <file name="${PCRE_DIR}/pcre_get.c"/>
  <file name="${PCRE_DIR}/pcre_study.c"/>
  <file name="${PCRE_DIR}/pcre_chartables.c"/>
  <file name="${PCRE_DIR}/pcre_globals.c"/>
  <file name="${PCRE_DIR}/pcre_tables.c"/>
  <file name="${PCRE_DIR}/pcre_compile.c"/>
  <file name="${PCRE_DIR}/pcre_info.c"/>
  <file name="${PCRE_DIR}/pcre_try_flipped.c"/>
  <file name="${PCRE_DIR}/pcre_config.c"/>
  <file name="${PCRE_DIR}/pcre_maketables.c"/>
  <file name="${PCRE_DIR}/pcre_ucd.c"/>
  <file name="${PCRE_DIR}/pcre_dfa_exec.c"/>
  <file name="${PCRE_DIR}/pcre_newline.c"/>
  <file name="${PCRE_DIR}/pcre_valid_utf8.c"/>
  <file name="${PCRE_DIR}/pcre_exec.c"/>
  <file name="${PCRE_DIR}/pcre_ord2utf8.c"/>
  <file name="${PCRE_DIR}/pcre_version.c"/>
  <file name="${PCRE_DIR}/pcre_fullinfo.c"/>
  <file name="${PCRE_DIR}/pcre_refcount.c"/>
  <file name="${PCRE_DIR}/pcre_xclass.c"/>

</files>



<target id="regexp" output="regexp${DBG}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="regexp"/>
  <flag value="-dll"/>
  <lib name="hxcpp${DBG}.lib"/>
</target>

<set name="ZLIB_DIR" value="runtime/thirdparty/zlib-1.2.3"/>

<files id="zlib" dir="${HXCPP}">
  <depend name="${HXCPP}/include/hxMacros.h"/>
  <depend name="${HXCPP}/include/hxObject.h"/>
  <depend name="${HXCPP}/include/neko.h"/>

  <compilerflag value="-I${HXCPP}/${ZLIB_DIR}"/>

  <file name="runtime/libs/zlib/ZLib.cpp"/>

  <file name="${ZLIB_DIR}/adler32.c"/>
  <file name="${ZLIB_DIR}/crc32.c"/>
  <file name="${ZLIB_DIR}/infback.c"/>
  <file name="${ZLIB_DIR}/inflate.c"/>
  <file name="${ZLIB_DIR}/uncompr.c"/>
  <file name="${ZLIB_DIR}/compress.c"/>
  <file name="${ZLIB_DIR}/deflate.c"/>
  <file name="${ZLIB_DIR}/gzio.c"/>
  <file name="${ZLIB_DIR}/inffast.c"/>
  <file name="${ZLIB_DIR}/inftrees.c"/>
  <file name="${ZLIB_DIR}/trees.c"/>
  <file name="${ZLIB_DIR}/zutil.c"/>

</files>




<target id="zlib" output="zlib${DBG}" tool="linker" toolid="dll">
  <files id="zlib"/>
  <flag value="-dll"/>
  <lib name="hxcpp${DBG}.lib"/>
</target>


<target id="default">
   <target id="runtime"/>
   <target id="std"/>
   <target id="regexp"/>
   <target id="zlib"/>
</target>


<target id="clean" tool="clean">
  <dir name="obj"/>
</target>


<target id="haxe" tool="linker" toolid="exe" output="${HAXE_OUTPUT}${DBG}">
  <target id="default"/>
  <files id="haxe"/>
  <files id="__main__"/>
  <lib name="hxcpp${DBG}.lib"/>
</target>


</xml>


